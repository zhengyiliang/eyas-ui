@import './token.less';
@btn-prefix-cls: ~'@{prefix}-btn';

.@{btn-prefix-cls} {
  display: inline-block;
  position: relative;
  outline: none;
  font-weight: 400;
  user-select: none;
  cursor: pointer;
  white-space: nowrap;
  transition: all 0.1s linear;
  box-sizing: border-box;
  line-height: @line-height-base;
  border: 1px solid transparent;
  border-radius: @radius-small;

  &-loading {
    cursor: default;
    position: relative;

    &::before {
      content: '';
      position: absolute;
      top: -1px;
      right: -1px;
      bottom: -1px;
      left: -1px;
      z-index: 1;
      display: block;
      background: #fff;
      border-radius: inherit;
      opacity: 0.4;
      transition: opacity 0.1s linear;
      pointer-events: none;
    }

    .@{btn-prefix-cls}-loading-icon {
      animation: rotate 1s linear infinite;
    }
    @keyframes rotate {
      0% {
        transform: rotate(0deg);
      }

      50% {
        transform: rotate(180deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  }
}

.btn-type(@type) {
  .@{btn-prefix-cls}-@{type}:not(.@{btn-prefix-cls}-disabled) {
    border-color: ~'@{btn-@{type}-border-color}';
    color: ~'@{btn-@{type}-color}';
    background-color: ~'@{btn-@{type}-bg-color}';

    &:not(.@{btn-prefix-cls}-loading):hover {
      border-color: ~'@{btn-@{type}-border-color_hover}';
      color: ~'@{btn-@{type}-color_hover}';
      background-color: ~'@{btn-@{type}-bg-color_hover}';
    }

    &:not(.@{btn-prefix-cls}-loading):active {
      border-color: ~'@{btn-@{type}-border-color_active}';
      color: ~'@{btn-@{type}-color_active}';
      background-color: ~'@{btn-@{type}-bg-color_active}';
    }
  }
  .@{btn-prefix-cls}-@{type}.@{btn-prefix-cls}-disabled {
    background-color: ~'@{btn-@{type}-bg-color_disabled}';
    color: ~'@{btn-@{type}-color_disabled}';
    border-color: ~'@{btn-@{type}-border-color_disabled}';
    cursor: not-allowed;
  }
}

.btn-status(@type, @status) {
  .@{btn-prefix-cls}-@{type}.@{btn-prefix-cls}-status-@{status}:not(
      .@{btn-prefix-cls}-disabled
    ) {
    border-color: ~'@{btn-@{type}-border-color_@{status}}';
    color: ~'@{btn-@{type}-color_@{status}}';
    background-color: ~'@{btn-@{type}-bg-color_@{status}}';

    &:not(.@{btn-prefix-cls}-loading):hover {
      border-color: ~'@{btn-@{type}-border-color_@{status}_hover}';
      color: ~'@{btn-@{type}-color_@{status}_hover}';
      background-color: ~'@{btn-@{type}-bg-color_@{status}_hover}';
    }

    &:not(.@{btn-prefix-cls}-loading):active {
      border-color: ~'@{btn-@{type}-border-color_@{status}_active}';
      color: ~'@{btn-@{type}-color_@{status}_active}';
      background-color: ~'@{btn-@{type}-bg-color_@{status}_active}';
    }
  }

  .@{btn-prefix-cls}-@{type}.@{btn-prefix-cls}-status-@{status}.@{btn-prefix-cls}-disabled {
    color: ~'@{btn-@{type}-color_@{status}_disabled}';
    background-color: ~'@{btn-@{type}-bg-color_@{status}_disabled}';
    border-color: ~'@{btn-@{type}-border-color_@{status}_disabled}';
  }
}

// 长按钮
.@{btn-prefix-cls}-block {
  display: block;
  width: 100%;
}

.btn-size(@size) {
  .@{btn-prefix-cls}.@{btn-prefix-cls}-size-@{size} {
    height: ~'@{btn-size-@{size}-height}';
    font-size: ~'@{btn-size-@{size}-font-size}';
    padding: 0 ~'@{btn-size-@{size}-padding-horizontal}';
  }
  .@{btn-prefix-cls}-size-@{size}.@{btn-prefix-cls}-iconOnly,
  .@{btn-prefix-cls}-size-@{size}.@{btn-prefix-cls}-shape-circle {
    width: ~'@{size-@{size}}';
    height: ~'@{size-@{size}}';
    padding: 0;
    text-align: center;
    border-radius: @radius-circle;
  }

  .@{btn-prefix-cls}-size-@{size}.@{btn-prefix-cls}-iconOnly {
    border-radius: @radius-small;
  }

  .@{btn-prefix-cls}-size-@{size}.@{btn-prefix-cls}-shape-round {
    border-radius: calc(~'@{size-@{size}}' * 0.5);
  }
}

.btn-type(secondary);
.btn-status(secondary, warning);
.btn-status(secondary, danger);
.btn-status(secondary, success);

.btn-type(primary);
.btn-status(primary, warning);
.btn-status(primary, danger);
.btn-status(primary, success);

.btn-type(outline);
.btn-status(outline, warning);
.btn-status(outline, danger);
.btn-status(outline, success);

.btn-type(text);
.btn-status(text, warning);
.btn-status(text, danger);
.btn-status(text, success);

.btn-type(link);
.btn-status(link, warning);
.btn-status(link, danger);
.btn-status(link, success);

.btn-size(mini);
.btn-size(small);
.btn-size(default);
.btn-size(large);
